1.	Ordenar un array de números enteros de menor a mayor.
import java.util.Arrays;
public class Main {
    public static void main(String[] args) {
        int[]array = {10,64,4,1,100,75,52,13,26,82};
        Arrays.sort(array);
        System.out.println(Arrays.toString(array));
    }
}


2.	Ordenar un array de números enteros de mayor a menor.
import java.util.Arrays;
import java.util.Collections;
public class Main {
    public static void main(String[] args) {
        Integer[] array = {10,64,4,1,100,75,52,13,26,82};
        Arrays.sort(array, Collections.reverseOrder());
        System.out.println(Arrays.toString(array));
    }
}


3.	Ordenar un array de números flotantes de menor a mayor.
import java.util.Arrays;
public class Main {
    public static void main(String[] args) {
        double[]array = {10,10.5,10.2,10.6,10.3,10.4,10.9,10.1,10.7,10.8};
        Arrays.sort(array);
        System.out.println(Arrays.toString(array));
    }
}

4.	Ordenar un array de números flotantes de mayor a menor.
import java.util.Arrays;
import java.util.Collections;
public class Main {
    public static void main(String[] args) {
        Double[] array = {10.5,10.2,10.6,10.3,10.4,10.9,10.1,10.7,10.8};
        Arrays.sort(array, Collections.reverseOrder());
        System.out.println(Arrays.toString(array));
    }
}

5.	Ordenar un array de cadenas de texto en orden alfabético.
import java.util.Arrays;
public class Main {
    public static void main(String[] args) {
        String[] array = {"a","e","f","b","i","c","h","d","g"};
        Arrays.sort(array);
        System.out.println(Arrays.toString(array));
    }
}

6.	Ordenar un array de cadenas de texto en orden inverso.
import java.util.Arrays;
import java.util.Collections;
public class Main {
    public static void main(String[] args) {
        String[] array = {"a","e","f","b","i","c","h","d","g"};
        Arrays.sort(array, Collections.reverseOrder());
        System.out.println(Arrays.toString(array));
    }
}

9.	Ordenar un array de números enteros utilizando el algoritmo de ordenamiento burbuja.

import java.util.Arrays;
public class Main {
    public static void main(String[] args) {
        int[] array = {1,7,3,2,5,10,9,8,4,6};
        int i, j, aux;
        for (i = 0; i < array.length - 1; i++) {
            for (j = 0; j < array.length -i - 1; j++) {
                if (array[j + 1] < array[j]) {
                    aux = array[j + 1];
                    array[j + 1] = array[j];
                    array[j] = aux;
                }
            }
        }
        System.out.println(Arrays.toString(array));
    }
}


10.	Ordenar un array de números enteros utilizando el algoritmo de ordenamiento por selección.
import java.util.Arrays;
public class Main {
    public static void main(String[] args) {
        int[] array = {1,7,3,2,5,10,9,8,4,6};
        int i, j, menor, pos, aux;
        for (i = 0; i < array.length - 1; i++) {
            menor = array[i];
            pos = i;
            for (j = i + 1; j < array.length; j++){
                if (array[j] < menor) {
                    menor = array[j];
                    pos = j;
                }
            }
            if (pos != i){
                aux = array[i];
                array[i] = array[pos];
                array[pos] = aux;
            }
        }
        System.out.println(Arrays.toString(array));
    }
}


11.	Ordenar un array de números enteros utilizando el algoritmo de ordenamiento por inserción.
import java.util.Arrays;
public class Main {
    public static void main(String[] args) {
        int[] array = {1,7,3,2,5,10,9,8,4,6};
        int pos, j;
        int aux;
        for (pos = 1; pos < array.length; pos++){
            aux = array[pos];
            j = pos - 1;
            while ((j >= 0) && (aux < array[j])){
                array[j + 1] = array[j];
                j--;
            }
            array[j + 1] = aux;
        }
        System.out.println(Arrays.toString(array));
    }
}
